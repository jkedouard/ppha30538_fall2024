---
title: "Problem Set 2"
author: "Jennifer Edouard"
date: October 19, 2024
date-format: long
format: pdf
---

 # Steps to submit

1. “This submission is my work alone and complies with the 30538 integrity policy.” Add
your initials to indicate your agreement: **JE**
2. “I have uploaded the names of anyone I worked with on the problem set here” **INSERT NAMES**
(2 point)
3. Late coins used this pset: **__** Late coins left after submission: **__**

# 1. Data Cleaning Continued (15 Points)

1.1 For each column, how many rows are NA? Write a function which returns a two column data frame where each row is a variable, the first column of the data frame is the name of each variable, and the second column of the data frame is the number of times thatthe column is NA. Test your function. Then, report the results applied to the parking tickets data frame. There are several ways to do this, but we haven’t covered them yet in class, so you will need to work independently to set this up.

```{python}
import altair as alt
from vega_datasets import data as vega_data
import pandas as pd

base_path = r"C:\Users\jenni\OneDrive - The University of Chicago\2-Python II\Github\ppha30538_fall2024\problem_sets\ps2\data\parking_tickets_one_percent.csv"
df_ps2 = pd.read_csv(base_path)
```

```{python}
def return_na(data_insert):
    counts = pd.DataFrame({
        "Variable": data_insert.columns,
        "NA_Count": data_insert.isna().sum().values
    })
    return counts
```

```{python}

test_function_data = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
df_titanic = pd.read_csv(test_function_data)

na_test_function = return_na(df_titanic)
print(na_test_function.head(10))
```

```{python}

na_counts_df_ps2 = return_na(df_ps2)
print(na_counts_df_ps2)
```

1.2 Three variables are missing much more frequently than the others. Why? (Hint: look at
some rows and read the data dictionary written by ProPublica)

The three variables with the highest number of NA values are zipcode (the ZIP code associated with the vehicle registration), notice_level (This field describes the type of notice the city has sent a motorist. If the field is blank, no notice was sent.), and hearing_disposition (outcome of a hearing, either “Liable” or “Not Liable.” If the ticket was not contested this field is blank.)

A lot of the tickets given were for having no registration, so it makes sense that there is also no zipcode associated with the ticket. As far as notice level, no notice would be sent if the motorist paid their dues immediately. Thus, many of these records have no value. Lastly, the hearing disposition column would only have a value if the motorist contested the ticket, and the majority did not.

1.3 Some of the other articles on propublica website discuss an increase in the dollar amount of the ticket for not having a city sticker. What was the old violation code and what is the new violation code?

Old violation code: 0964125
New violation code: 0964125B

```{python}
subset_no_city_sticker = df_ps2[df_ps2["violation_description"].str.startswith("NO CITY STICKER")]["violation_code"]

print(subset_no_city_sticker.head(5))

print(subset_no_city_sticker.tail(5))
```

1.4 How much was the cost of an initial offense under each code? (You can the ignore the ticket for a missing city sticker on vehicles over 16,000 pounds.)

```{python}
subset_no_city_sticker_2 = df_ps2[df_ps2["violation_description"].str.startswith("NO CITY STICKER")]["fine_level1_amount"]

print(subset_no_city_sticker_2.head(5))

print(subset_no_city_sticker_2.tail(5))
```

# 2 Revenue increase from "missing city sticker" tickets (20 Points)